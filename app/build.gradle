plugins {
    id 'com.android.application'
}

android {
    namespace 'com.ussimspoofer'
    compileSdk 34

    defaultConfig {
        applicationId "com.ussimspoofer"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        release {
            def keystoreFile = file("release.keystore")
            if (keystoreFile.exists()) {
                storeFile keystoreFile
                storePassword System.getenv("KEYSTORE_PASSWORD") ?: ""
                keyAlias System.getenv("KEY_ALIAS") ?: ""
                keyPassword System.getenv("KEY_PASSWORD") ?: ""
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false // <-- R8
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            enabled = false
        }
    }
}

dependencies {
    compileOnly files('libs/api-82.jar')
    implementation 'androidx.annotation:annotation:1.7.1'
}

// Disable test tasks
tasks.whenTaskAdded { task ->
    if (task.name.contains('Test') || task.name.contains('AndroidTest')) {
        task.enabled = false
    }
}

afterEvaluate {
    configurations.findAll {
        it.name.startsWith('test') || it.name.startsWith('androidTest')
    }.each {
        it.setVisible(false)
        it.setTransitive(false)
        it.setCanBeResolved(true)
        it.setCanBeConsumed(false)
    }
}

// Rename APK file by branch
android.applicationVariants.all { variant ->
    if (variant.buildType.name == "release") {
        variant.outputs.all { output ->
            def branch = System.getenv("GITHUB_REF_NAME") ?: "unknown"
            def fileName = "spoof.apk"
            if (branch == "main") {
                fileName = "spoof-global.apk"
            } else if (branch == "tiktok-only") {
                fileName = "spoof-ttonly.apk"
            }
            outputFileName = fileName
        }
    }
}
